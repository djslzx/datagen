"new cover story":
  inputs:
    - stories
    - concepts
  system_prompt: |
    You are an AI teaching assistant for a computer science department, where your job is to write programming problems to teach students at varying levels of competency.
    
    A programming problem consists of a "cover story", a "key concept", and a "specification".  The cover story motivates the problem; the key concept is the idea from computer science that the problem seeks to teach or test; and the specification gives guidelines about how solutions to the problem should be structured.
  user_prompt: |
    Propose a novel problem consisting of a cover story, a concept, and a specification.  

    You MUST the following format; it is critical that the headings are indicated with three hashes (###), as your responses will be automatically parsed.

    ### Cover story
    e.g. {stories}

    ### Concept
    e.g. {concepts}

    ### Problem description
    Specify the problem.  The problem should be motivated by the cover story.

    ### Specification
    If the problem can be solved with a function, state the function's signature in Python, with type annotations.

    If the problem uses classes and methods, state the class name and the methods that will be tested in Python, with type annotations.

    ### Example
    An input-output example.

"restyle as cover story":
  inputs:
    - stories
    - concepts
    - problem
  system_prompt: |
    You are an AI teaching assistant for a computer science department, where your job is to write programming problems to teach students at varying levels of competency.
    
    A programming problem consists of a "cover story", a "key concept", and a "specification".  The cover story motivates the problem; the key concept is the idea from computer science that the problem seeks to teach or test; and the specification gives guidelines about how solutions to the problem should be structured.  

    You will be given a programming problem that is not formatted properly.  Your job is to take the input problem and rewrite it in the following format.  You MUST use the following format; it is critical that the headings are indicated with three hashes (###), as your responses will be automatically parsed.

    ### Cover story
    e.g. {stories}

    ### Concept
    e.g. {concepts}

    ### Problem description
    Specify the problem.  The problem should be motivated by the cover story.

    ### Specification
    If the problem can be solved with a function, state the function's signature in Python, with type annotations.

    If the problem uses classes and methods, state the class name and the methods that will be tested in Python, with type annotations.

    ### Example
    An input-output example.
  user_prompt: |
    {problem}

"new coverless":
  inputs:
    - concepts
  system_prompt: |
    You are an AI teaching assistant for a computer science department, where your job is to write Python programming problems to teach students at varying levels of competency.
    
    A programming problem consists of a description, key concept, and an informal specification.
  user_prompt: |
    Propose a novel problem in the following format.  You MUST use the following format.  You MUST keep the headings as they are, and you MUST keep the order of the headings as they are.  DO NOT add subheadings.

    ### Problem description
    Specify the problem.  The description should give a clear overview of what is required, with enough detail so that all solutions to the problem can be tested for correctness using a uniform test suite.

    ### Concept
    e.g., recursion, dynamic programming, graph theory, etc.
    
    ### Specification
    If the problem can be solved with a function, write out the function's signature in Python, with type annotations.  Use the following format:
    ```python
    def my_function(arg1: int, arg2: str) -> bool:
      """A comment that describes what my_function does."""
      ...
    ```
    
    If the problem uses classes and methods, state the class name and the methods that will be tested in Python, with type annotations.  Use the following format:
    ```python
    class MyClass:
      def method_one(self, arg1: str, arg2: int) -> bool:
        """A comment that describes what method_one does."""
        ...
      def method_two(self, arg1: int, arg2: int) -> int:
        """A comment that describes what method_two does."""
        ...
    ```

    ### Example
    Provide a code example of how functions or classes used in the solution can be used.  If the problem can be solved with a function, provide an input-output example.  If the problem uses classes and methods, provide an example of how the class can be instantiated and used.

"restyle as coverless":
  inputs:
    - problem
  system_prompt: |
    You are an AI teaching assistant for a computer science department, where your job is to write Python programming problems to teach students at varying levels of competency.
    
    A programming problem consists of a description, key concept, and an informal specification.  

    You will be given a programming problem that is not quite complete.  Your job is to take the input problem and rewrite it in the following format.  You MUST use the following format.  You MUST keep the headings as they are, and you MUST keep the order of the headings as they are.  DO NOT add subheadings.
    
    If the problem specifies a programming language other than Python, do your best to rewrite the problem in Python.
    
    Do your best to avoid repeating information.  The problem given to you is a guide; do not copy it verbatim.
    
    ### Problem description
    Specify the problem.  The description should give a clear overview of what is required, with enough detail so that all solutions to the problem can be tested for correctness using a uniform test suite.

    ### Concept
    e.g., recursion, dynamic programming, graph theory, etc.
    
    ### Specification
    If the problem can be solved with a function, write out the function's signature in Python, with type annotations.  Use the following format:
    ```python
    def my_function(arg1: int, arg2: str) -> bool:
      """A comment that describes what my_function does."""
      ...
    ```
    
    If the problem uses classes and methods, state the class name and the methods that will be tested in Python, with type annotations.  Use the following format:
    ```python
    class MyClass:
      def method_one(self, arg1: str, arg2: int) -> bool:
        """A comment that describes what method_one does."""
        ...
      def method_two(self, arg1: int, arg2: int) -> int:
        """A comment that describes what method_two does."""
        ...
    ```

    ### Example
    Provide a code example of how functions or classes used in the solution can be used.  If the problem can be solved with a function, provide an input-output example.  If the problem uses classes and methods, provide an example of how the class can be instantiated and used.

  user_prompt: |
    {problem}

"n solutions":
  inputs:
    - problem
    - n
  system_prompt: |
    You are an AI programming assistant. Propose exactly {n} code solutions to the following programming problem. 
    
    Solve the problem using Python and its standard library. You may write multiple helper functions as you see fit.  Make sure that your solutions follow the specification given in the problem.  
    
    Output only code, with no accompanying text. Do your best to ensure that all solutions you propose have distinct approaches to the problem. You must output your solutions in the following format:
    
    ```python
    <code for solution 1>
    ```
    ```python
    <code for solution 2>
    ```
    ....
    ```python
    <code for solution {n}>
    ```
    
    Good luck!
  user_prompt: |
    {problem}

"n tests":
  inputs:
    - problem
    - n
  system_prompt: |
    You are an AI teaching assistant. Your task is to produce test cases to evaluate student solutions to programming problems.
    
    Produce exactly {n} test cases for the following problem.
    
    Your test cases should be boolean functions that return True when the student implementation passes the test, and False otherwise.  
    
    Try to provide a variety of tests that can give an accurate and complete assessment of a student solution's correctness.  
    
    Where possible, write your test cases in Python and stick to the standard library.  
    
    You should output only code, with no accompanying text.  DO NOT ATTEMPT TO SOLVE THE PROBLEM!
    
    You must output your {n} tests in the following format.
    ```python
    def test_1() -> bool:
        ...
    def test_2() -> bool:
        ...
    ...
    def test_{n}() -> bool:
        ....
    ```
  user_prompt: |
    {problem}

"check if python":
  inputs:
    - problem
  system_prompt: |
    You are an AI teaching assistant.  You will be presented with a programming problem.  
    Your task is to check whether the problem can be solved using Python.  
    
    If the program is language-agnostic, asks for Python, or can be reworked into a Python problem, output "True".  
    If the program strictly requires a language other than Python, output "False". 
    
    Output only "True" or "False", with no accompanying text.
    
    Examples:
    Write a SQL query to find all the users in a database with age greater than 25.
    >>> False
    
    Write a function that takes a string and returns the number of vowels in the string.
    >>> True

  user_prompt: |
    {problem}

"mutate problem":
  inputs:
    - problem
    - mutator
  system_prompt: |
    Please increase the difficulty of the given programming test question a bit.  You can increase the difficulty using, but not limited to, the following methods: 
    {mutator}
    
    Your response should consist of a new programming test question that is entirely self-contained.  It should be solvable without 
      (a) knowing the original question,
      (b) having a network connection, or
      (c) using any system calls. 
    
    Output only the new programming question, with no additional text.
  user_prompt: |
    {problem}

"name problem":
  inputs:
    - problem
  system_prompt: |
    Come up with a name for the following programming problem.  
    The name should contain no more than 5 words.  
    Your response should contain no formatting.  
    Each word in the name should be separated by a space.
  user_prompt: |
    {problem}

"check novelty":
  inputs:
    - src_problem
    - dst_problem
  system_prompt: |
    You are an AI teaching assistant.  You will be presented with two programming problems, where the second problem is a modified version of the first.
    
    Your task is to determine whether the new problem is non-trivially different from the original problem.
    
    Answer True/False, with no punctuation or extra text.
  user_prompt: |
    Original problem:
    {src_problem}
    
    Modified problem:
    {dst_problem}

"check solvable":
  inputs:
    - problem
  system_prompt: |
    Given the complexity and breadth of the given problem, can you provide a complete and functional code solution, meeting all the specified requirements?
    
    If you are able to follow up with a full solution, answer True.  If you can only provide an outline, answer False.
    
    Answer True/False, with no punctuation or extra text.
  user_prompt: |
    {problem}

"rate difficulty":
  inputs:
    - problem
  system_prompt: |
    You are an AI teaching assistant.  You will be presented with a programming problem.
    
    Your task is to rate the difficulty of the problem on a scale of 1 to 5, where 1 is the easiest and 5 is the hardest.
    
    You must respond with only your numerical rating, with no punctuation or extra text.
  user_prompt: |
    {problem}
